@using Blazored.LocalStorage;
@using KpiSchedule.Api.Models.Requests;
@using KpiSchedule.Api.Models.Responses;
@using KpiSchedule.Frontend.ViewModels;
@inject ILocalStorageService localStorage;
@inject AppStateViewModel appState;

<nav class="navbar navbar-expand-lg navbar-light bg-light px-5">
    <a class="navbar-brand" href="#">KPI Schedule</a>
    <div class="navbar-nav">
        <NavLink class="nav-item nav-link" href="group-schedule/search">Розклад групи</NavLink>
        <NavLink class="nav-item nav-link" href="teacher-schedule/search">Розклад викладача</NavLink>
        @if (appState.IsLoggedIn)
        {
            <NavLink class="nav-item nav-link" href="personal-schedule">Особистий розклад</NavLink>
        }
        <NavLink class="nav-item nav-link" href="https://api.kpi-schedule.com">API</NavLink>
    </div>
    <div class="nav navbar-nav navbar-right ms-auto">
        <TelegramLoginWidget />
    </div>
</nav>

@code {
    protected override async Task OnInitializedAsync()
    {
        appState.AppStateChanged += StateHasChanged;
        var authToken = await localStorage.GetItemAsync<JwtTokenResponse>("token");
        var telegramData = await localStorage.GetItemAsync<TelegramAuthenticationRequest>("telegramData");
        if (authToken?.ExpiresAt < DateTime.UtcNow)
        {
            // token is expired
            await localStorage.ClearAsync();
            authToken = null;
        }
        appState.IsLoggedIn = authToken is not null;
        if(appState.IsLoggedIn)
        {
            appState.LoggedInUserId = telegramData.Id.ToString();
        } 
        await base.OnInitializedAsync();
    }
}
